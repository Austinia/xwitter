{"version":3,"sources":["Myfirebase.js","components/AuthForm.js","routes/Auth.js","components/Xweet.js","components/XweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","TwitterAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Xweet","xweetObj","isOwner","editing","setEditing","text","newXweet","setnewXweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","autoFocus","attachmentUrl","src","faTrash","faPencilAlt","XweetFactory","userObj","xweet","setXweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","xweets","setXweets","useEffect","onSnapshot","snapshot","xweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyXweets","where","orderBy","get","updateProfile","signOut","push","Routers","isLoggedIn","maxWidth","width","margin","exact","path","App","Init","setInit","setuserObj","onAuthStateChanged","user","args","Router","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OAEvBC,EAAYZ,IAASa,YAErBC,EAAiBd,IAASe,U,OCkDxBC,EArEE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAMEZ,EAAYwB,+BACvBhB,EACAE,GARS,OAMXe,EANW,+CAYEzB,EAAY0B,2BAA2BlB,EAAOE,GAZhD,QAYXe,EAZW,eAcbE,QAAQC,IAAIH,GAdC,kDAgBbV,EAAS,KAAMc,SAhBF,0DAAH,sDAoBd,OACE,qCACE,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACE,uBACEX,KAAK,QACLY,KAAK,OACLC,YAAY,qBACZC,UAAQ,EACRb,MAAOZ,EACPQ,SAAUA,EACVc,UAAU,cAEZ,uBACEX,KAAK,WACLY,KAAK,WACLC,YAAY,2BACZC,UAAQ,EACRb,MAAOV,EACPM,SAAUA,EACVc,UAAU,cAEZ,uBACEC,KAAK,SACLD,UAAU,uBACVV,MAAOR,EAAa,UAAY,WAEjCE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAEzC,sBAAMoB,QA7BY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA6BnBL,UAAU,aAAxC,SACGlB,EAAa,SAAW,iB,gBCxBlBwB,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIVmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACnB,YAATpB,IACTmB,EAAW,IAAIvC,EAAiBE,KAAKuC,qBARnB,SAUDxC,EAAYyC,gBAAgBH,GAV3B,yDAAH,sDAYnB,OACE,sBAAKR,UAAU,gBAAf,UACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACE,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMM,SAE9C,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,mCACwB,cAAC,IAAD,CAAiBY,KAAMC,gB,gBCqCxCM,EArED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8B5C,oBAAS,GAAvC,mBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAAgC9C,mBAAS2C,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAAnC,EAAA,0DACToC,OAAOC,QAAQ,kEADN,gCAIZzD,EAAU0D,IAAV,iBAAwBV,EAASW,KAAMC,SAJ3B,uBAKZ1D,EAAe2D,WAAWb,EAASc,eAAeF,SALtC,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAAClB,GAAD,OAAWA,MAC5Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAU0D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAHO,OAKfF,GAAW,GALI,2CAAH,sDAad,OACE,qBAAKvB,UAAU,QAAf,SACGsB,EACC,mCACGD,GACC,qCACG,IACD,uBAAM9B,SAAUA,EAAUS,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLX,MAAOmC,EACPvC,SAjBC,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZoC,EAAYpC,IAcEa,UAAQ,EACRkC,WAAS,EACTrC,UAAU,cAEZ,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAEtD,sBAAMI,QAAS+B,EAAenC,UAAU,oBAAxC,+BAON,qCACE,6BAAKoB,EAASI,OACbJ,EAASkB,eAAiB,qBAAKC,IAAKnB,EAASkB,gBAC7CjB,GACC,sBAAKrB,UAAU,iBAAf,UACE,sBAAMI,QAASuB,EAAf,SACE,cAAC,IAAD,CAAiBf,KAAM4B,QAEzB,sBAAMpC,QAAS+B,EAAf,SACE,cAAC,IAAD,CAAiBvB,KAAM6B,iB,QCiCxBC,EA3FM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0BlE,mBAAS,IAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KACA,EAAoCpE,mBAAS,IAA7C,mBAAOqE,EAAP,KAAmBC,EAAnB,KACMxD,EAAQ,uCAAG,WAAOJ,GAAP,uBAAAK,EAAA,yDACfL,EAAMM,iBACQ,KAAVmD,EAFW,oDAKXV,EAAgB,GACD,KAAfY,EANW,wBAOPA,EAAaxE,EACb0E,EAAU1E,EAAe2E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBARhD,SASUJ,EAAQK,UAAUP,EAAY,YATxC,cASPQ,EATO,iBAUSA,EAASL,IAAIM,iBAVtB,QAUbrB,EAVa,sBAYTd,EAAW,CACfI,KAAMoB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBjB,iBAhBa,UAkBT9D,EAAUwF,WAAW,UAAUC,IAAIzC,GAlB1B,QAmBfyB,EAAS,IACTE,EAAc,IApBC,4CAAH,sDA6Cd,OACE,uBAAMxD,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVV,MAAOsD,EACP1D,SA7BS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZuD,EAASvD,IA0BHW,KAAK,OACLC,YAAY,yEACZ4D,UAAW,MAEb,uBAAO7D,KAAK,SAASX,MAAM,SAASU,UAAU,2BAEhD,wBAAO+D,IAAI,cAAc/D,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMoD,SAEzB,uBACEjC,GAAG,cACH9B,KAAK,OACLgE,OAAO,UACP/E,SAtCe,SAACC,GACpB,IAGM+E,EADF/E,EADFC,OAAU+E,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAcyB,IAEZE,QAAQR,IACVE,EAAOO,cAAcT,IA0BnBlD,MAAO,CACL4D,QAAS,KAGZ9B,GACC,sBAAK9C,UAAU,0BAAf,UACE,qBACEuC,IAAKO,EACL9B,MAAO,CACL6D,gBAAiB/B,KAGrB,sBAAK9C,UAAU,qBAAqBI,QAnCb,kBAAM2C,EAAc,KAmC3C,UACE,gDACA,cAAC,IAAD,CAAiBnC,KAAMkE,gBCvDpBC,EA9BF,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACd,EAA4BlE,mBAAS,IAArC,mBAAOuG,EAAP,KAAeC,EAAf,KAcA,OAbAC,qBAAU,WAER9G,EAAUwF,WAAW,UAAUuB,YAAW,SAACC,GAEzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACzD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAInC,WAGTsF,EAAUI,QAEX,IAGD,sBAAKrF,UAAU,YAAf,UACE,cAAC,EAAD,CAAc2C,QAASA,IACvB,qBAAK3B,MAAO,CAAEwE,UAAW,IAAzB,SACGR,EAAOO,KAAI,SAAC3C,GAAD,OACV,cAAC,EAAD,CAEExB,SAAUwB,EACVvB,QAASuB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMb,aCQR0D,EA5BI,SAAC,GAAD,IAAG9C,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAI3B,MAAO,CAAE0E,QAAS,OAAQC,eAAgB,SAAUH,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMI,GAAG,IAAI5E,MAAO,CAAE6E,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiBjF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CACE6E,GAAG,WACH5E,MAAO,CACL8E,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBrF,KAAMsF,IAAQpF,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEwE,UAAW,IAA1B,SACG7C,EAAQwD,YAAR,UAAyBxD,EAAQwD,YAAjC,6BAAsD,kCCmCpDC,EA1DC,SAAC,GAA8B,IAA5BzD,EAA2B,EAA3BA,QAAS0D,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA4C9H,mBAASkE,EAAQwD,aAA7D,mBAAOK,EAAP,KAAuBC,EAAvB,KAKMC,EAAW,uCAAG,sBAAAlH,EAAA,sEACGpB,EAClBwF,WAAW,UACX+C,MAAM,YAAa,KAAMhE,EAAQQ,KACjCyD,QAAQ,aACRC,MALe,yDAAH,qDAOjB3B,qBAAU,WACRwB,MACC,IACH,IAMMnH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACFkD,EAAQwD,cAAgBK,EAFb,gCAGP7D,EAAQmE,cAAc,CAC1BX,YAAaK,IAJF,OAMbH,IANa,2CAAH,sDASd,OACE,sBAAKrG,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEd,SAnBS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZmH,EAAkBnH,IAgBZW,KAAK,OACLoC,WAAS,EACTnC,YAAY,kCACZZ,MAAOkH,EACPxG,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAM,8CACNU,UAAU,UACVgB,MAAO,CACLwE,UAAW,SAIjB,sBAAMxF,UAAU,2BAA2BI,QAjDzB,WACpBlC,EAAY6I,UACZT,EAAQU,KAAK,MA+CX,yBCjBSC,EAhCC,SAAC,GAA0C,IAAxCZ,EAAuC,EAAvCA,YAAaa,EAA0B,EAA1BA,WAAYvE,EAAc,EAAdA,QAC1C,OACE,eAAC,IAAD,WACGuE,GAAc,cAAC,EAAD,CAAYvE,QAASA,IACpC,cAAC,IAAD,UACGuE,EACC,sBACElG,MAAO,CACLmG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR7B,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM5E,QAASA,MAEjB,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS5E,QAASA,EAAS0D,YAAaA,SAI5C,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCcGC,MA1Cf,WACE,MAAwB/I,oBAAS,GAAjC,mBAAOgJ,EAAP,KAAaC,EAAb,KAEA,EAA8BjJ,mBAAS,MAAvC,mBAAOkE,EAAP,KAAgBgF,EAAhB,KA+BA,OA9BAzC,qBAAU,WACRhH,EAAY0J,oBAAmB,SAACC,GAC3BA,GAEuB,OAArBA,EAAK1B,aACN0B,EAAKf,cAAc,CACjBX,YAAa,iBAGjBwB,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBhD,IAAK0E,EAAK1E,IACV2D,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAE5CH,EAAW,MAKfD,GAAQ,QAET,IAUD,mCACGD,EAAO,cAACM,EAAD,CAAS1B,YAVD,WAClB,IAAMwB,EAAO3J,EAAY8J,YACzBL,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBhD,IAAK0E,EAAK1E,IACV2D,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAKDZ,WAAYxC,QAAQ/B,GAAUA,QAASA,IAAc,mD,MCnCtGsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0013569.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();","import { authService } from \"Myfirebase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setnewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setnewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"이메일\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Sign Up\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log in\" : \" Sign Up\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"Myfirebase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"twitter\") {\n      provider = new firebaseInstance.auth.TwitterAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Twiiter <FontAwesomeIcon icon={faTwitter} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"Myfirebase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Xweet = ({ xweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newXweet, setnewXweet] = useState(xweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말로 지우시겠습니까?\");\n    if (ok) {\n      //delete xweet\n      await dbService.doc(`xweets/${xweetObj.id}`).delete();\n      await storageService.refFromURL(xweetObj.attachmentURL).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`xweets/${xweetObj.id}`).update({\n      text: newXweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setnewXweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              {\" \"}\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  value={newXweet}\n                  onChange={onChange}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                취소\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{xweetObj.text}</h4>\n          {xweetObj.attachmentUrl && <img src={xweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Xweet;\n","import { dbService, storageService } from \"Myfirebase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst XweetFactory = ({ userObj }) => {\n  const [xweet, setXweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (xweet === \"\") {\n      return;\n    }\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachment = storageService;\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const xweetObj = {\n      text: xweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    };\n    await dbService.collection(\"xweets\").add(xweetObj);\n    setXweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setXweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  const onClearAttachmentClick = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={xweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"무슨 일이 일어나고 있나요?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\n            <span>삭제</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default XweetFactory;\n","import Xweet from \"components/Xweet\";\nimport { dbService } from \"Myfirebase\";\nimport React, { useEffect, useState } from \"react\";\nimport XweetFactory from \"components/XweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [xweets, setXweets] = useState([]);\n  useEffect(() => {\n    // 스냅챗을 리스너로 이용, 스냅챗은 데이터베이스의 변화가 생길때마다 알려줌\n    dbService.collection(\"xweets\").onSnapshot((snapshot) => {\n      //스냅챗이 올때마다 배열 생성\n      const xweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      //배열을 스테이트에 집어 넣기\n      setXweets(xweetArray);\n    });\n  }, []);\n  // map이 두개의 프롭을 갖는 컴포넌트 Xweet생성 ( xweetObj, isOwner )\n  return (\n    <div className=\"container\">\n      <XweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {xweets.map((xweet) => (\n          <Xweet\n            key={xweet.id}\n            xweetObj={xweet}\n            isOwner={xweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 프로필` : \"프로필\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import { authService, dbService } from \"Myfirebase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyXweets = async () => {\n    const xweets = await dbService\n      .collection(\"xweets\")\n      .where(\"createrId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n  useEffect(() => {\n    getMyXweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"프로필 이름\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"프로필 업데이트\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n// <> </> 프래그먼트 부모 요소가 없을때 많은 요소를 랜더 하고 싶을때 사용\nconst Routers = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/Profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default Routers;\n","import React, { useEffect, useState } from \"react\";\nimport Routers from \"components/Router\";\nimport { authService } from \"Myfirebase\";\n\nfunction App() {\n  const [Init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setuserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        // setIsLoggedIn(true);\n        if(user.displayName === null){\n          user.updateProfile({\n            displayName: \"익명\",\n          })\n        }\n        setuserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });} else {\n          setuserObj(null);\n        }\n      // } else {\n      //   setIsLoggedIn(false);\n      // }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setuserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {Init ? <Routers refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"초기화중입니다...\"}\n      {/* <footer className=\"footer\">&copy; Xwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}